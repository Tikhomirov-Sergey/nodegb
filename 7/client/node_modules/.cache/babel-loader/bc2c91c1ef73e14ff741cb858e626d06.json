{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\node\\\\7\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\node\\\\7\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\node\\\\7\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\node\\\\7\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport { accessTokenSelector } from '../../ducks/auth';\nimport { apiUrl as baseURL } from '../../config';\nimport { select } from 'redux-saga/effects';\n\nvar Api =\n/*#__PURE__*/\nfunction () {\n  function Api() {\n    _classCallCheck(this, Api);\n  }\n\n  _createClass(Api, null, [{\n    key: \"Post\",\n    value: function Post(url, data) {\n      return Api.Request(url, 'POST', data);\n    }\n  }, {\n    key: \"Request\",\n    value: function Request(url, method, data, needAuthorization) {\n      return new Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(resolve, reject) {\n          var _ref2, result;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return axios({\n                    method: method,\n                    baseURL: baseURL,\n                    url: url,\n                    data: data\n                  });\n\n                case 3:\n                  _ref2 = _context.sent;\n                  result = _ref2.data;\n                  resolve(result);\n                  _context.next = 11;\n                  break;\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context[\"catch\"](0);\n                  resolve({\n                    error: _context.t0\n                  });\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 8]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"HeaderOptions\",\n    value: function HeaderOptions(needAuthorization) {\n      return {\n        headers: {}\n      };\n    }\n  }]);\n\n  return Api;\n}();\n\nApi.Get =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee2(url, data, needAuthorization) {\n  var token;\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          debugger;\n          token = select(accessTokenSelector);\n          debugger;\n          return _context2.abrupt(\"return\", Api.Request(url, 'GET', data, needAuthorization));\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n});\nexport { Api as default };","map":{"version":3,"sources":["C:/Программирование/node/7/client/src/helpers/api/index.js"],"names":["axios","accessTokenSelector","apiUrl","baseURL","select","Api","url","data","Request","method","needAuthorization","Promise","resolve","reject","result","error","headers","Get","token"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,kBAApC;AAEA,SAASC,MAAM,IAAIC,OAAnB,QAAkC,cAAlC;AACA,SAASC,MAAT,QAAuB,oBAAvB;;IAEqBC,G;;;;;;;;;yBAWLC,G,EAAKC,I,EAAM;AACnB,aAAOF,GAAG,CAACG,OAAJ,CAAYF,GAAZ,EAAiB,MAAjB,EAAyBC,IAAzB,CAAP;AACH;;;4BAEcD,G,EAAKG,M,EAAQF,I,EAAMG,iB,EAAmB;AAEjD,aAAO,IAAIC,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAIoBb,KAAK,CAAC;AAAES,oBAAAA,MAAM,EAANA,MAAF;AAAUN,oBAAAA,OAAO,EAAPA,OAAV;AAAmBG,oBAAAA,GAAG,EAAHA,GAAnB;AAAwBC,oBAAAA,IAAI,EAAJA;AAAxB,mBAAD,CAJzB;;AAAA;AAAA;AAIGO,kBAAAA,MAJH,SAIHP,IAJG;AAMXK,kBAAAA,OAAO,CAACE,MAAD,CAAP;AANW;AAAA;;AAAA;AAAA;AAAA;AASXF,kBAAAA,OAAO,CAAC;AAACG,oBAAAA,KAAK;AAAN,mBAAD,CAAP;;AATW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AAYH;;;kCAEoBL,iB,EAAmB;AAEpC,aAAO;AACHM,QAAAA,OAAO,EAAE;AADN,OAAP;AAMH;;;;;;AAvCgBX,G,CAEVY,G;;yBAAM,kBAAWX,GAAX,EAAgBC,IAAhB,EAAsBG,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAET;AACMQ,UAAAA,KAHG,GAGKd,MAAM,CAACH,mBAAD,CAHX;AAIT;AAJS,4CAMFI,GAAG,CAACG,OAAJ,CAAYF,GAAZ,EAAiB,KAAjB,EAAwBC,IAAxB,EAA8BG,iBAA9B,CANE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C;SAFIL,G","sourcesContent":["import axios from 'axios'\r\nimport { accessTokenSelector } from '../../ducks/auth'\r\n\r\nimport { apiUrl as baseURL } from '../../config'\r\nimport { select } from 'redux-saga/effects'\r\n\r\nexport default class Api {\r\n\r\n    static Get = function* (url, data, needAuthorization) {\r\n\r\n        debugger\r\n        const token = select(accessTokenSelector)\r\n        debugger\r\n\r\n        return Api.Request(url, 'GET', data, needAuthorization)\r\n    }\r\n\r\n    static Post(url, data) {\r\n        return Api.Request(url, 'POST', data)\r\n    }\r\n\r\n    static Request(url, method, data, needAuthorization) {\r\n        \r\n        return new Promise(async (resolve, reject) => {\r\n\r\n            try {\r\n\r\n                const { data: result } = await axios({ method, baseURL, url, data })\r\n\r\n                resolve(result)\r\n            }\r\n            catch(error) {\r\n                resolve({error})\r\n            }\r\n        });\r\n    }\r\n\r\n    static HeaderOptions(needAuthorization) {\r\n\r\n        return {\r\n            headers: {\r\n                \r\n            }\r\n          }\r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}