{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\node\\\\7\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _awaitAsyncGenerator from \"C:\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\node\\\\7\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/awaitAsyncGenerator\";\nimport _wrapAsyncGenerator from \"C:\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\node\\\\7\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/wrapAsyncGenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(saga);\n\nimport { appName } from '../../config';\nimport { createSelector } from 'reselect';\nimport { Record, OrderedMap, List } from 'immutable';\nimport { call, put, takeEvery, all, select } from 'redux-saga/effects';\nimport { replace } from 'connected-react-router';\nimport { UserAuthEntity } from './entity/auth-entity';\nimport Api from '../../helpers/api';\n/*\r\n*   Contstants \r\n*/\n\nexport var moduleName = 'auth';\nvar prefix = \"\".concat(appName, \"/\").concat(moduleName);\nexport var SIGN_IN_REQUEST = \"\".concat(prefix, \"/SIGN_IN_REQUEST\");\nexport var SIGN_IN_SUCCESS = \"\".concat(prefix, \"/SIGN_IN_SUCCESS\");\n/*\r\n*   Reducer\r\n*/\n\nexport var ReducerRecord = Record({\n  access_token: null,\n  user: null\n});\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new ReducerRecord();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case SIGN_IN_SUCCESS:\n      return state;\n\n    default:\n      return state;\n  }\n}\n/*\r\n*   Selectors\r\n*/\n\nexport var stateSelector = function stateSelector(state) {\n  return state[moduleName];\n};\nexport var userSelector = createSelector(stateSelector, function (state) {\n  return state.user;\n});\nexport var isAuthorizeSelector = createSelector(userSelector, function (user) {\n  return !!user;\n});\n/*\r\n*   Action Creaters\r\n*/\n\nexport function signIn(username, password) {\n  return {\n    type: SIGN_IN_REQUEST,\n    payload: {\n      username: username,\n      password: password\n    }\n  };\n}\n/*\r\n*   Sagas\r\n*/\n\nexport function signInSaga(_x) {\n  return _signInSaga.apply(this, arguments);\n}\n\nfunction _signInSaga() {\n  _signInSaga = _wrapAsyncGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var payload, username, password, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            payload = _ref.payload;\n            username = payload.username, password = payload.password;\n            _context.next = 4;\n            return _awaitAsyncGenerator(Api.Post('auth', {\n              username: username,\n              password: password\n            }));\n\n          case 4:\n            data = _context.sent;\n            debugger;\n            _context.next = 8;\n            return put({\n              type: SIGN_IN_SUCCESS,\n              payload: {\n                user: null\n              }\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _signInSaga.apply(this, arguments);\n}\n\nexport function saga() {\n  return _regeneratorRuntime.wrap(function saga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([takeEvery(SIGN_IN_REQUEST, signInSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["C:/Программирование/node/7/client/src/ducks/auth/index.js"],"names":["saga","appName","createSelector","Record","OrderedMap","List","call","put","takeEvery","all","select","replace","UserAuthEntity","Api","moduleName","prefix","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","ReducerRecord","access_token","user","reducer","state","action","type","payload","stateSelector","userSelector","isAuthorizeSelector","signIn","username","password","signInSaga","Post","data"],"mappings":";;;;;;yBAmFiBA,I;;AAnFjB,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAyC,WAAzC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,MAApC,QAAkD,oBAAlD;AACA,SAASC,OAAT,QAAwB,wBAAxB;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AAEA;;;;AAIA,OAAO,IAAMC,UAAU,GAAG,MAAnB;AAEP,IAAMC,MAAM,aAAMd,OAAN,cAAiBa,UAAjB,CAAZ;AAEA,OAAO,IAAME,eAAe,aAAMD,MAAN,qBAArB;AACP,OAAO,IAAME,eAAe,aAAMF,MAAN,qBAArB;AAEP;;;;AAIA,OAAO,IAAMG,aAAa,GAAGf,MAAM,CAAC;AAChCgB,EAAAA,YAAY,EAAE,IADkB;AAEhCC,EAAAA,IAAI,EAAE;AAF0B,CAAD,CAA5B;AAKP,eAAe,SAASC,OAAT,GAAsD;AAAA,MAArCC,KAAqC,uEAA7B,IAAIJ,aAAJ,EAA6B;AAAA,MAARK,MAAQ;AAAA,MACzDC,IADyD,GACvCD,MADuC,CACzDC,IADyD;AAAA,MACnDC,OADmD,GACvCF,MADuC,CACnDE,OADmD;;AAGjE,UAAQD,IAAR;AAEI,SAAKP,eAAL;AACI,aAAOK,KAAP;;AAEJ;AACI,aAAOA,KAAP;AANR;AASH;AAED;;;;AAIA,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACJ,KAAD;AAAA,SAAWA,KAAK,CAACR,UAAD,CAAhB;AAAA,CAAtB;AACP,OAAO,IAAMa,YAAY,GAAGzB,cAAc,CAACwB,aAAD,EAAgB,UAAAJ,KAAK;AAAA,SAAIA,KAAK,CAACF,IAAV;AAAA,CAArB,CAAnC;AAEP,OAAO,IAAMQ,mBAAmB,GAAG1B,cAAc,CAC7CyB,YAD6C,EAE7C,UAACP,IAAD;AAAA,SAAU,CAAC,CAACA,IAAZ;AAAA,CAF6C,CAA1C;AAKP;;;;AAIA,OAAO,SAASS,MAAT,CAAgBC,QAAhB,EAA0BC,QAA1B,EAAoC;AACvC,SAAO;AACHP,IAAAA,IAAI,EAAER,eADH;AAEHS,IAAAA,OAAO,EAAE;AAAEK,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,QAAQ,EAARA;AAAZ;AAFN,GAAP;AAIH;AAED;;;;AAIA,gBAAuBC,UAAvB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4BP,YAAAA,OAA5B,QAA4BA,OAA5B;AAEIK,YAAAA,QAFJ,GAE0BL,OAF1B,CAEIK,QAFJ,EAEcC,QAFd,GAE0BN,OAF1B,CAEcM,QAFd;AAAA;AAAA,wCAIgBlB,GAAG,CAACoB,IAAJ,CAAS,MAAT,EAAiB;AAACH,cAAAA,QAAQ,EAARA,QAAD;AAAWC,cAAAA,QAAQ,EAARA;AAAX,aAAjB,CAJhB;;AAAA;AAIGG,YAAAA,IAJH;AAKH;AALG;AAOH,mBAAM3B,GAAG,CAAC;AACNiB,cAAAA,IAAI,EAAEP,eADA;AAENQ,cAAAA,OAAO,EAAE;AAAEL,gBAAAA,IAAI,EAAE;AAAR;AAFH,aAAD,CAAT;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAaP,OAAO,SAAUpB,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMS,GAAG,CAAC,CACND,SAAS,CAACQ,eAAD,EAAkBgB,UAAlB,CADH,CAAD,CAAT;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { appName } from '../../config'\r\nimport { createSelector } from 'reselect'\r\nimport { Record, OrderedMap, List } from 'immutable'\r\nimport { call, put, takeEvery, all, select } from 'redux-saga/effects'\r\nimport { replace } from 'connected-react-router'\r\n\r\nimport { UserAuthEntity } from './entity/auth-entity'\r\nimport Api from '../../helpers/api'\r\n\r\n/*\r\n*   Contstants \r\n*/\r\n\r\nexport const moduleName = 'auth'\r\n\r\nconst prefix = `${appName}/${moduleName}`\r\n\r\nexport const SIGN_IN_REQUEST = `${prefix}/SIGN_IN_REQUEST`\r\nexport const SIGN_IN_SUCCESS = `${prefix}/SIGN_IN_SUCCESS`\r\n\r\n/*\r\n*   Reducer\r\n*/\r\n\r\nexport const ReducerRecord = Record({\r\n    access_token: null,\r\n    user: null\r\n})\r\n\r\nexport default function reducer(state = new ReducerRecord(), action) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n\r\n        case SIGN_IN_SUCCESS: \r\n            return state\r\n\r\n        default: \r\n            return state\r\n \r\n    }\r\n}\r\n\r\n/*\r\n*   Selectors\r\n*/\r\n\r\nexport const stateSelector = (state) => state[moduleName]\r\nexport const userSelector = createSelector(stateSelector, state => state.user)\r\n\r\nexport const isAuthorizeSelector = createSelector(\r\n    userSelector,\r\n    (user) => !!user\r\n)\r\n\r\n/*\r\n*   Action Creaters\r\n*/\r\n\r\nexport function signIn(username, password) {\r\n    return {\r\n        type: SIGN_IN_REQUEST,\r\n        payload: { username, password }\r\n    }\r\n}\r\n\r\n/*\r\n*   Sagas\r\n*/\r\n\r\nexport async function* signInSaga({payload}) {\r\n\r\n    const {username, password} = payload\r\n\r\n    const data = await Api.Post('auth', {username, password})\r\n    debugger\r\n\r\n    yield put({\r\n        type: SIGN_IN_SUCCESS,\r\n        payload: { user: null }\r\n    })\r\n}\r\n\r\nexport function* saga() {\r\n    yield all([\r\n        takeEvery(SIGN_IN_REQUEST, signInSaga),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}