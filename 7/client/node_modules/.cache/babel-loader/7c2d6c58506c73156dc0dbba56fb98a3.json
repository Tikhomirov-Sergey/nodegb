{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\node\\\\7\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUsersSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(saga);\n\nimport { appName } from '../../config';\nimport { createSelector } from 'reselect';\nimport { Record, OrderedMap, List } from 'immutable';\nimport { call, put, takeEvery, all, select } from 'redux-saga/effects';\nimport { replace } from 'connected-react-router';\nimport Api from '../../helpers/api';\n/*\r\n*   Contstants \r\n*/\n\nexport var moduleName = 'users-list';\nvar prefix = \"\".concat(appName, \"/\").concat(moduleName);\nexport var LOAD_USERS_REQUEST = \"\".concat(prefix, \"/LOAD_USERS_REQUEST\");\nexport var LOAD_USERS_SUCCESS = \"\".concat(prefix, \"/LOAD_USERS_SUCCESS\");\n/*\r\n*   Reducer\r\n*/\n\nexport var ReducerRecord = Record({\n  users: List()\n});\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new ReducerRecord();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case LOAD_USERS_SUCCESS:\n      return state;\n\n    default:\n      return state;\n  }\n}\n/*\r\n*   Selectors\r\n*/\n\nexport var stateSelector = function stateSelector(state) {\n  return state[moduleName];\n};\nexport var usersListSelector = createSelector(stateSelector, function (state) {\n  debugger;\n  return state.users;\n});\n/*\r\n*   Action Creaters\r\n*/\n\nexport function loadUsers(username, password) {\n  return {\n    type: LOAD_USERS_REQUEST\n  };\n}\n/*\r\n*   Sagas\r\n*/\n\nexport function loadUsersSaga(_ref) {\n  var payload;\n  return _regeneratorRuntime.wrap(function loadUsersSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          debugger;\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function saga() {\n  return _regeneratorRuntime.wrap(function saga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([takeEvery(LOAD_USERS_REQUEST, loadUsersSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/Программирование/node/7/client/src/ducks/user-list/index.js"],"names":["loadUsersSaga","saga","appName","createSelector","Record","OrderedMap","List","call","put","takeEvery","all","select","replace","Api","moduleName","prefix","LOAD_USERS_REQUEST","LOAD_USERS_SUCCESS","ReducerRecord","users","reducer","state","action","type","payload","stateSelector","usersListSelector","loadUsers","username","password"],"mappings":";;;;yBA8DiBA,a;;;yBAMAC,I;;AApEjB,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAyC,WAAzC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,MAApC,QAAkD,oBAAlD;AACA,SAASC,OAAT,QAAwB,wBAAxB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AAEA;;;;AAIA,OAAO,IAAMC,UAAU,GAAG,YAAnB;AAEP,IAAMC,MAAM,aAAMb,OAAN,cAAiBY,UAAjB,CAAZ;AAEA,OAAO,IAAME,kBAAkB,aAAMD,MAAN,wBAAxB;AACP,OAAO,IAAME,kBAAkB,aAAMF,MAAN,wBAAxB;AAEP;;;;AAIA,OAAO,IAAMG,aAAa,GAAGd,MAAM,CAAC;AAChCe,EAAAA,KAAK,EAAEb,IAAI;AADqB,CAAD,CAA5B;AAIP,eAAe,SAASc,OAAT,GAAsD;AAAA,MAArCC,KAAqC,uEAA7B,IAAIH,aAAJ,EAA6B;AAAA,MAARI,MAAQ;AAAA,MACzDC,IADyD,GACvCD,MADuC,CACzDC,IADyD;AAAA,MACnDC,OADmD,GACvCF,MADuC,CACnDE,OADmD;;AAGjE,UAAQD,IAAR;AAEI,SAAKN,kBAAL;AACI,aAAOI,KAAP;;AAEJ;AACI,aAAOA,KAAP;AANR;AASH;AAED;;;;AAIA,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACJ,KAAD;AAAA,SAAWA,KAAK,CAACP,UAAD,CAAhB;AAAA,CAAtB;AACP,OAAO,IAAMY,iBAAiB,GAAGvB,cAAc,CAACsB,aAAD,EAAgB,UAAAJ,KAAK,EAAI;AAAE;AAAU,SAAOA,KAAK,CAACF,KAAb;AAAmB,CAAxD,CAAxC;AAEP;;;;AAIA,OAAO,SAASQ,SAAT,CAAmBC,QAAnB,EAA6BC,QAA7B,EAAuC;AAC1C,SAAO;AACHN,IAAAA,IAAI,EAAEP;AADH,GAAP;AAGH;AAED;;;;AAIA,OAAO,SAAUhB,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyBwB,UAAAA,OAAzB,QAAyBA,OAAzB;AAEH;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMP,OAAO,SAAUvB,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMS,GAAG,CAAC,CACND,SAAS,CAACO,kBAAD,EAAqBhB,aAArB,CADH,CAAD,CAAT;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { appName } from '../../config'\r\nimport { createSelector } from 'reselect'\r\nimport { Record, OrderedMap, List } from 'immutable'\r\nimport { call, put, takeEvery, all, select } from 'redux-saga/effects'\r\nimport { replace } from 'connected-react-router'\r\n\r\nimport Api from '../../helpers/api'\r\n\r\n/*\r\n*   Contstants \r\n*/\r\n\r\nexport const moduleName = 'users-list'\r\n\r\nconst prefix = `${appName}/${moduleName}`\r\n\r\nexport const LOAD_USERS_REQUEST = `${prefix}/LOAD_USERS_REQUEST`\r\nexport const LOAD_USERS_SUCCESS = `${prefix}/LOAD_USERS_SUCCESS`\r\n\r\n/*\r\n*   Reducer\r\n*/\r\n\r\nexport const ReducerRecord = Record({\r\n    users: List()\r\n})\r\n\r\nexport default function reducer(state = new ReducerRecord(), action) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n\r\n        case LOAD_USERS_SUCCESS: \r\n            return state\r\n\r\n        default: \r\n            return state\r\n \r\n    }\r\n}\r\n\r\n/*\r\n*   Selectors\r\n*/\r\n\r\nexport const stateSelector = (state) => state[moduleName]\r\nexport const usersListSelector = createSelector(stateSelector, state => { debugger; return state.users})\r\n\r\n/*\r\n*   Action Creaters\r\n*/\r\n\r\nexport function loadUsers(username, password) {\r\n    return {\r\n        type: LOAD_USERS_REQUEST\r\n    }\r\n}\r\n\r\n/*\r\n*   Sagas\r\n*/\r\n\r\nexport function* loadUsersSaga({payload}) {\r\n\r\n    debugger\r\n\r\n}\r\n\r\nexport function* saga() {\r\n    yield all([\r\n        takeEvery(LOAD_USERS_REQUEST, loadUsersSaga),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}