{"ast":null,"code":"import _objectSpread from \"C:\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\node\\\\7\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\node\\\\7\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\node\\\\7\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"C:\\\\\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\\\\node\\\\7\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport axios from 'axios';\nimport { call, put, takeEvery, all, select } from 'redux-saga/effects';\nimport { accessTokenSelector } from '../../ducks/auth';\nimport { apiUrl as baseURL } from '../../config';\n\nvar Api = function Api() {\n  _classCallCheck(this, Api);\n};\n\nApi.Get =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee(url, data, options) {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return Api.Request(url, 'GET', data, options);\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n});\nApi.Post =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee2(url, data, options) {\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return Api.Request(url, 'POST', data, options);\n\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n});\nApi.Request =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee4(url, method, data, options) {\n  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          options = options || {};\n          _context4.next = 3;\n          return call(new Promise(\n          /*#__PURE__*/\n          function () {\n            var _ref = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee3(resolve, reject) {\n              var _ref2, result;\n\n              return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.prev = 0;\n                      _context3.next = 3;\n                      return axios(_objectSpread({\n                        method: method,\n                        baseURL: baseURL,\n                        url: url,\n                        data: data\n                      }, options));\n\n                    case 3:\n                      _ref2 = _context3.sent;\n                      result = _ref2.data;\n                      resolve(result);\n                      _context3.next = 11;\n                      break;\n\n                    case 8:\n                      _context3.prev = 8;\n                      _context3.t0 = _context3[\"catch\"](0);\n                      resolve({\n                        error: _context3.t0\n                      });\n\n                    case 11:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3, null, [[0, 8]]);\n            }));\n\n            return function (_x, _x2) {\n              return _ref.apply(this, arguments);\n            };\n          }()));\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee4);\n});\nApi.HeaderOptions =\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee5(needAuthorization) {\n  var headers, token;\n  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          headers = {};\n\n          if (!needAuthorization) {\n            _context5.next = 6;\n            break;\n          }\n\n          _context5.next = 4;\n          return select(accessTokenSelector);\n\n        case 4:\n          token = _context5.sent;\n          headers.authorization = token;\n\n        case 6:\n          return _context5.abrupt(\"return\", headers);\n\n        case 7:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _callee5);\n});\nexport { Api as default };","map":{"version":3,"sources":["C:/Программирование/node/7/client/src/helpers/api/index.js"],"names":["axios","call","put","takeEvery","all","select","accessTokenSelector","apiUrl","baseURL","Api","Get","url","data","options","Request","Post","method","Promise","resolve","reject","result","error","HeaderOptions","needAuthorization","headers","token","authorization"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,MAApC,QAAkD,oBAAlD;AAEA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAASC,MAAM,IAAIC,OAAnB,QAAkC,cAAlC;;IAEqBC,G;;;;AAAAA,G,CAEVC,G;;yBAAM,iBAAWC,GAAX,EAAgBC,IAAhB,EAAsBC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AACF,iBAAMJ,GAAG,CAACK,OAAJ,CAAYH,GAAZ,EAAiB,KAAjB,EAAwBC,IAAxB,EAA8BC,OAA9B,CAAN;;AADE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C;AAFIJ,G,CAMVM,I;;yBAAO,kBAAWJ,GAAX,EAAgBC,IAAhB,EAAsBC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMJ,GAAG,CAACK,OAAJ,CAAYH,GAAZ,EAAiB,MAAjB,EAAyBC,IAAzB,EAA+BC,OAA/B,CAAN;;AADG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C;AANGJ,G,CAUVK,O;;yBAAU,kBAAWH,GAAX,EAAgBK,MAAhB,EAAwBJ,IAAxB,EAA8BC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAEbA,UAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAFa;AAIb,iBAAMZ,IAAI,CAAC,IAAIgB,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAY,kBAAOC,OAAP,EAAgBC,MAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAIgBnB,KAAK;AAAGgB,wBAAAA,MAAM,EAANA,MAAH;AAAWR,wBAAAA,OAAO,EAAPA,OAAX;AAAoBG,wBAAAA,GAAG,EAAHA,GAApB;AAAyBC,wBAAAA,IAAI,EAAJA;AAAzB,yBAAkCC,OAAlC,EAJrB;;AAAA;AAAA;AAIDO,sBAAAA,MAJC,SAIPR,IAJO;AAMfM,sBAAAA,OAAO,CAACE,MAAD,CAAP;AANe;AAAA;;AAAA;AAAA;AAAA;AASfF,sBAAAA,OAAO,CAAC;AAACG,wBAAAA,KAAK;AAAN,uBAAD,CAAP;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAZ;;AAAA;AAAA;AAAA;AAAA,cAAD,CAAV;;AAJa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C;AAVAZ,G,CA4BVa,a;;yBAAgB,kBAAWC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfC,UAAAA,OAFe,GAEL,EAFK;;AAAA,eAIhBD,iBAJgB;AAAA;AAAA;AAAA;;AAAA;AAMD,iBAAMlB,MAAM,CAACC,mBAAD,CAAZ;;AANC;AAMTmB,UAAAA,KANS;AAOfD,UAAAA,OAAO,CAACE,aAAR,GAAwBD,KAAxB;;AAPe;AAAA,4CAUZD,OAVY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C;SA5BNf,G","sourcesContent":["import axios from 'axios'\r\nimport { call, put, takeEvery, all, select } from 'redux-saga/effects'\r\n\r\nimport { accessTokenSelector } from '../../ducks/auth'\r\nimport { apiUrl as baseURL } from '../../config'\r\n\r\nexport default class Api {\r\n\r\n    static Get = function* (url, data, options) {\r\n        return yield Api.Request(url, 'GET', data, options)\r\n    }\r\n\r\n    static Post = function* (url, data, options) {\r\n        return yield Api.Request(url, 'POST', data, options)\r\n    }\r\n\r\n    static Request = function* (url, method, data, options) {\r\n\r\n        options = options || {}\r\n        \r\n        yield call(new Promise(async (resolve, reject) => {\r\n\r\n            try {\r\n\r\n                const { data: result } = await axios({ method, baseURL, url, data, ...options })\r\n\r\n                resolve(result)\r\n            }\r\n            catch(error) {\r\n                resolve({error})\r\n            }\r\n        }));\r\n    }\r\n\r\n    static HeaderOptions = function* (needAuthorization) {\r\n\r\n        let headers = {}\r\n\r\n        if(needAuthorization) {\r\n\r\n            const token = yield select(accessTokenSelector)\r\n            headers.authorization = token\r\n        }\r\n\r\n        return headers\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}